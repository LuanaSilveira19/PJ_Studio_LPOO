package view;

import br.edu.ifsul.cc.lpoo.pj_studio.pj_studio.dao.PercistenciaJPA;
import br.edu.ifsul.cc.lpoo.pj_studio.pj_studio.model.Modalidades;
import java.util.ArrayList;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;

/**
 *
 * @author luana
 */
public class TelaModalidades extends javax.swing.JFrame {

    /**
     * Creates new form TelaModalidades
     */
    private PercistenciaJPA jpa;

    public TelaModalidades() {
        initComponents();
        jpa = new PercistenciaJPA();
        listarModalidades();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnNovo = new javax.swing.JButton();
        Lista = new javax.swing.JScrollPane();
        lstModalidades = new javax.swing.JList<>();
        BTNRemover = new javax.swing.JButton();
        BTNEditar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnNovo.setText("Nova Modalidade");
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        Lista.setViewportView(lstModalidades);

        BTNRemover.setText("Remover");
        BTNRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTNRemoverActionPerformed(evt);
            }
        });

        BTNEditar.setText("Editar");
        BTNEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTNEditarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(Lista, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16))))
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(BTNRemover, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BTNEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Lista, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnNovo)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BTNRemover)
                    .addComponent(BTNEditar))
                .addGap(10, 10, 10))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private DefaultListModel<String> mod = new DefaultListModel<>();

    private void listarModalidades() {
        mod.clear();
        List<Modalidades> modal = jpa.getModalidades();
        for (Modalidades m : modal) {
            mod.addElement(m.getDescricao());
        }
    }
    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        
        lstModalidades.setModel(mod);

        String descricao = JOptionPane.showInputDialog(this, "Digite a descrição da nova modalidade:");
        Modalidades m = new Modalidades();
        m.setDescricao(descricao);
        try {
            jpa.persist(m);
            JOptionPane.showMessageDialog(this, "Nova modalidade adicionada: " + descricao);
            //System.exit(0);
        } catch (Exception e) {
        }
        listarModalidades();
    }//GEN-LAST:event_btnNovoActionPerformed

     private Modalidades buscarModalidade(String descricao) {
       List<Modalidades> modal = jpa.getModalidades();
        for (Modalidades modalidade : modal) {
            if (modalidade.getDescricao().equalsIgnoreCase(descricao)) {
                return modalidade;
            }
        }
        return null;
    }
    private void BTNRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTNRemoverActionPerformed
       
        String descricao = JOptionPane.showInputDialog(this, "Digite a descrição da modalidade para ser removida:");
           if (descricao != null && !descricao.trim().isEmpty()) {
            Modalidades modalidade = buscarModalidade(descricao);
            if (modalidade != null) {
                try {
                    jpa.remover(modalidade);
                     JOptionPane.showMessageDialog(this, "Modalidade removida: " + modalidade.getDescricao());
                     listarModalidades();
                } catch (Exception ex) {
                    Logger.getLogger(TelaModalidades.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(this, "Erro ao remover a modalidade.");
                }
            } else {
                 JOptionPane.showMessageDialog(this, "Modalidade não encontrada.");
            }
        } else {
             JOptionPane.showMessageDialog(this, "Descrição inválida.");
        }
           
    }//GEN-LAST:event_BTNRemoverActionPerformed

    private void BTNEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTNEditarActionPerformed
      String descricao = JOptionPane.showInputDialog(this, "Digite a descrição da modalidade para ser editada:");
      String nova = JOptionPane.showInputDialog(this, "Modifique o nome dela:");
           if (descricao != null && !descricao.trim().isEmpty()) {
            Modalidades modalidade = buscarModalidade(descricao);
            if (modalidade != null) {
                try {
                     modalidade.setDescricao(nova);  
                     jpa.update(modalidade);
                     JOptionPane.showMessageDialog(this, "Modalidade atualizada: Antiga:" +descricao+", Nova: "+ modalidade.getDescricao());
                     listarModalidades();
                } catch (Exception ex) {
                    Logger.getLogger(TelaModalidades.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(this, "Erro ao editar a modalidade.");
                }
            } else {
                 JOptionPane.showMessageDialog(this, "Modalidade não encontrada.");
            }
        } else {
             JOptionPane.showMessageDialog(this, "Descrição inválida.");
        }
           
    }//GEN-LAST:event_BTNEditarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaModalidades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaModalidades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaModalidades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaModalidades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                new TelaModalidades().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BTNEditar;
    private javax.swing.JButton BTNRemover;
    private javax.swing.JScrollPane Lista;
    private javax.swing.JButton btnNovo;
    private javax.swing.JList<String> lstModalidades;
    // End of variables declaration//GEN-END:variables
}
